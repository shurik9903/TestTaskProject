name: fastapi-messages-service-bot

networks:
  app:
    driver: bridge

volumes:
  db-data:
    driver: local
  redis-data:
    driver: local

services:
  mongo:
    image: mongo
    container_name: mongo
    networks:
      - app
    env_file: mongo.env
    ports:
      - "0.0.0.0:${MONGO_PORT}:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}

    volumes:
      - db-data:/data

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    networks:
      - app
    ports:
      - "0.0.0.0:8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_EXPRESS_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_EXPRESS_PASSWORD}
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_EXPRESS_WEB_USER}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_EXPRESS_WEB_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongo
      ME_CONFIG_MONGODB_ENABLE_ADMIN: true
      ME_CONFIG_MONGODB_PORT: "27017"
    env_file: mongo.env
    depends_on:
      - mongo

  redis:
    image: redis:7.4-rc-alpine
    container_name: redis
    networks:
      - app
    ports:
      - "6379:6379"
    env_file: redis.env
    command: >
      --save 60 1
      --loglevel warning
      --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis-data:/data

  app_server:
    build:
      context: ../TestTask
      dockerfile: ./Dockerfile
    container_name: app_server
    environment:
      MONGO_DB_PORT: ${MONGO_PORT}
      MONGO_DB_USER: ${MONGO_USER}
      MONGO_DB_PASSWORD: ${MONGO_PASSWORD}

      REDIS_DB_HOST: ${REDIS_HOST}
      REDIS_DB_PORT: ${REDIS_PORT}
      REDIS_DB_USER: ${REDIS_USER}
      REDIS_DB_PASSWORD: ${REDIS_PASSWORD}
    env_file:
      - server.env
      - mongo.env
      - redis.env
    depends_on:
      - mongo
      - redis
    networks:
      - app

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - 8000:80
    volumes:
      - ../nginx/nginx.d.conf:/etc/nginx/conf.d/default.conf
    networks:
      - app

  bot:
    build:
      context: ../TestTaskBot
      dockerfile: ./Dockerfile
    container_name: bot
    env_file: bot.env
    networks:
      - app
